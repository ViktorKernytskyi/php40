<?php
echo '12.1' . '<br>';
/** //12.1. Дан двумерный массив.
*а) Вывести на экран элемент, расположенный в правом верхнем углу массива.
*б) Вывести на экран элемент, расположенный в левом нижнем углу массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6]
];
echo 'вариант а)' . ' ' . $arr[0][2] . '<br>';
echo 'вариант б)' . ' ' . $arr[1][0];
echo "<hr>";

//foreach ($arr as $item){
// foreach ($item as $value){
// }
//}
echo "<hr>";
echo '12.2' . '<br>';
/** 12.2. Дан двумерный массив.
*а) Вывести на экран элемент, расположенный в правом нижнем углу массива.
*б) Вывести на экран элемент, расположенный в левом верхнем углу массива.
 */

echo "<hr>";
echo '12.3 а' . '<br>';
/** 12.3. Дан двумерный массив. Составить программу:
*а) вывода на экран любого элемента второй строки массива;
*б) вывода на экран любого элемента массива.
 */

$arr = [
    [1, 2, 3],
    [4, 5, 6],
];
foreach ($arr as $key => $item) {
           if ($key == 1) {
            echo ' '.  $arr[$key][rand(0, 2)]. ' ';
                  }
 }
echo "<hr>";
function output_on_display($arr_1, $num )
{
    foreach ($arr_1 as $key => $item) {
        if ($key == $num - 1)
           echo  $arr_1[$key][rand(0, 2)];
           }
    return $arr_1;
}
$res = output_on_display($arr, 2);

echo "<hr>";
echo '12.3 б' . '<br>';
/** 12.3. Дан двумерный массив. Составить программу:
  *б) вывода на экран любого элемента массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
];
$a = rand(0,2);

$k = rand(0,1);
foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key == $k && $a ==  $key_1) {
            echo ' '.$arr[$key][$key_1]. ' ';
        }
    }
}

echo "<hr>";


echo "<hr>";

echo '12.4 a' . '<br>';
/** /12.4. Дан двумерный массив. Составить программу:
*а) вывода на экран любого элемента третьего столбца массива;
*б) вывода на экран любого элемента массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
$a = rand (0,6); /** ранд строк (кей) */

foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key_1 == 2 && $key == $a) {
                        echo $arr[$a][$key_1];
        }
    }
}
echo "<hr>";
echo '12.4 б' . '<br>';
/** /12.4. Дан двумерный массив. Составить программу:
  *б) вывода на экран любого элемента массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
$k = rand(0,6);
echo ' рандом кей ='.$k. ' '. '<br>';
$a = rand(0,2);
echo ' рандом кей_1 ='.$a. ' '. '<br>';


foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key == $k && $a ==  $key_1) {
            echo ' '.$arr[$key][$key_1]. ' '. '<br>';
        }
    }
}

echo "<hr>";
echo '12.5 а' . '<br>';
/** 12.5. Дан двумерный массив. Вывести на экран:
*а) все элементы пятой строки массива;
*б) все элементы s-го столбца массива
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];

foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key == 4 ) {
            echo ' '.$arr[$key][$key_1]. ' ';
        }
    }
}
echo "<hr>";
echo '12.5 б' . '<br>';
/** 12.5. Дан двумерный массив. Вывести на экран:
  *б) все элементы s-го столбца массива
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
$a = rand (0,2);/** рандом ключа столбца */
foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key_1 == $a) {
            //  echo 'рандом третьего столбца='. ' ' .$key_1;
            echo $arr[$key][$key_1];
        }
    }
}
echo "<hr>";
echo '12.6 а' . '<br>';
/**
 * 12.6. Дан двумерный массив. Вывести на экран:
 * а) все элементы второго столбца массива;
 * б) все элементы m-й строки массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
foreach ($arr as $key => $item) {
   // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key_1 == 1 ) {
            echo $arr[$key][$key_1];
        }
    }
}

echo "<hr>";
echo '12.6 б' . '<br>';
/** 12.6. Дан двумерный массив. Вывести на экран:
  * б) все элементы m-й строки массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
$k = rand(0,6);
foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key == $k ) {
            echo ' '.$arr[$key][$key_1]. ' ';
        }
    }
}
echo "<hr>";
echo '12.7 a' . '<br>';
/**
 * 12.7. Составить программу:
 * а) заменяющую значение любого элемента пятой строки двумерного массива
 * числом 1949;
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
function changeRand($arrArg, $num, $a)
{
    foreach ($arrArg as $key => $item) {
        if ($key == $num - 1)
            $arrArg[$key][rand(0, 2)] = $a;
    }

    return $arrArg;
}

$res = changeRand($arr, 5, 1949);
var_dump('<pre>', $res);

$a = 1949;
foreach ($arr as $key => $item) {
    if ($key == 4)
        $arr[$key][rand(0, 2)] = $a;
}
//var_dump('<pre>', $arr);

//var_dump('<pre>', $arr);
echo "<hr>";
echo '12.7 б' . '<br>';
/**
 * 12.7 б. Составить программу:
  * б) заменяющую значение любого элемента двумерного массива числом a.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
function changeRand_1($arrArg, $num, $a)
{
    foreach ($arrArg as $key => $item) {
        if ($key == $num - 1)
            $arrArg[$key][rand(0, 2)] = $a;
    }

    return $arrArg;
}

$res = changeRand_1($arr, rand(1,6), 'a');
var_dump('<pre>', $res);

$a = 'a';
foreach ($arr as $key => $item) {
    if ($key == rand(0,6))
        $arr[$key][rand(0, 2)] = $a;
}
var_dump('<pre>', $arr);


echo "<hr>";
echo '12.8' . '<br>';
/** 12.8. Составить программу:
*а) заменяющую значение любого элемента второго столбца двумерного массива числом 13;
*б) заменяющую значение любого элемента двумерного массива числом b.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
function change($arrArg_1, $num, $a)
{    foreach ($arrArg_1 as $key => $item) {
        // var_dump('<pre>', $key);
        foreach ($item as $key_1 => $value) {
            //var_dump('<pre>', $key_1, $value);
            if ($key_1 == 2 &&  $key == $num - 1) {

                echo $arrArg_1[$key][$key_1] = $a;
            }
        }

    }
    return $arrArg_1;
}
$res = change($arr, rand(1,7), 13);
var_dump('<pre>', $res);


echo "<hr>";
echo "<hr>";
echo "<hr>";
$a = 13;
$b = rand (0,6); /** ранд строк (кей) */

foreach ($arr as $key => $item) {
    // var_dump('<pre>', $key);
    foreach ($item as $key_1 => $value) {
        //var_dump('<pre>', $key_1, $value);
        if ($key_1 == 2 && $key == $b) {
            echo $arr[$b][$key_1] = $a;
        }
    }

}
var_dump('<pre>', $arr);

echo "<hr>";
echo '12.8 б' . '<br>';
/** 12.8. Составить программу:
  *б) заменяющую значение любого элемента двумерного массива числом b.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [1, 2, 3],
    [7, 8, 9],
    [1, 2, 3],
    [1, 2, 3]
];
function change_1($arrArg, $num, $a)
{
    foreach ($arrArg as $key => $item) {
        if ($key == $num - 1)
            $arrArg[$key][rand(0, 2)] = $a;
    }

    return $arrArg;
}

$res = change_1($arr, rand(1,6), 'b');
var_dump('<pre>', $res);

$a = 'b';
foreach ($arr as $key => $item) {
    if ($key == rand(0,6))
        $arr[$key][rand(0, 2)] = $a;
}
var_dump('<pre>', $arr);

echo "<hr>";
echo '12.22' . '<br>';
/** 12.22. Заполнить двумерный массив результатами таблицы умножения (в первой
*строке должны быть записаны произведения каждого из чисел от 1 до 9 на 1,
*во второй — на 2, ..., в последней — на 9).
 */
$arr = [
    '1' => [],
    '2' => [],
    '3' => [],
    '4' => [],
    '5' => [],
    '6' => [],
    '7' => [],
    '8' => [],
    '9' => [],
];
$n = 9;
$m = 9;
for ($i = 1; $i <= $n; $i++) {
    for ($j = 1; $j <= $m; $j++) {
        $arr[$i][$j] = $i * $j;
        // echo    ' '.$arr[$i][$j]. ' ';
    }
    echo '<br>';

}
var_dump('<pre>', $arr);

echo "<hr>";
echo '12.23 а' . '<br>';
/** 12.23. Заполнить двумерный массив размером
*7 на 7 так, как показано на рис. 12.1.
 */

//1 0 0 0 0 0 1
//0 1 0 0 0 1 0
//0 0 1 0 1 0 0
//0 0 0 1 0 0 0
//0 0 1 0 1 0 0
//0 1 0 0 0 1 0
//1 0 0 0 0 0 1
$n =7;
for ($i = 0; $i < $n; $i++) {
    $first = $i+1;
    $second = $n - $i;
    for ($j = 1; $j <= $n; $j++) {
        if(($j==$first || $j==$second) ){
            $arr[$i][$j] = 1 ;
        }else {
            $arr[$i][$j] = 0;
        }
        echo    ' '.$arr[$i][$j]. ' ';
    }
    echo '<br>';
}
echo "<hr>";
echo "<hr>";
echo "<hr>";
echo "<hr>";
function renderTable($n){
    for ($i = 0; $i < $n; $i++) {
        $first = $i+1;
        $second = $n - $i;
        for ($j = 1; $j <= $n; $j++) {
            if(($j==$first || $j==$second) ){
                $arr[$i][$j] = 1 ;
            }else {
                $arr[$i][$j] = 0;
            }

            echo    ' '.$arr[$i][$j]. ' ';

        }
        echo '<br>';
    }

    echo "<hr>";
}

renderTable(7);

echo "<hr>";
echo '12.23 б' . '<br>';


echo "<hr>";
echo '12.23 в' . '<br>';


//1 1 1 1 1 1 1
//0 1 1 1 1 1 0
//0 0 1 1 1 0 0
//0 0 0 1 0 0 0
//0 0 1 1 1 0 0
//0 1 1 1 1 1 0
//1 1 1 1 1 1 1
//в
//Рис. 12.1


echo "<hr>";
echo '12.24' . '<br>';
/**  12.24. Заполнить массив размером 6 6
*так, как показано на рис. 12.2.
 */

//1 1 1 1 1 1 1 2 3 4 5 6
//1 2 3 4 5 6 2 3 4 5 6 1
//1 3 6 10 15 21 3 4 5 6 1 2
//1 4 10 20 35 56 4 5 6 1 2 3
//1 5 15 35 70 126 5 6 1 2 3 4
//1 6 21 56 126 252 6 1 2 3 4 5

echo "<hr>";
echo '12.25' . '<br>';
/**Заполнить двумерный массив так, как представлено на рис. 12.3.
 */



echo "<hr>";
echo '12.26' . '<br>';/** НЕ ГОТОВО */
/** 12.26. Заполнить двумерный массив размером
*n n
*единицами и нулями таким
*образом, чтобы единицы размещались так, как размещаются на шахматной
*доске черные поля, а нули — как белые поля. Левое нижнее поле на шахматной доске всегда черное. Задачу решить:
*а) при четном значении n;
*б) при нечетном значении n
  */
//$n =7;
//for ($i = 0; $i < $n; $i++) {
//    $first = $i+1;
//    $second = $n - $i;
//    for ($j = 1; $j <= $n; $j++) {
//        if(($j==$first || $j==$second) ){
//            $arr[$i][$j] = 1 ;
//        }else {
//            $arr[$i][$j] = 0;
//        }
//        echo    ' '.$arr[$i][$j]. ' ';
//    }
//    echo '<br>';
//}
//echo "<hr>";
//echo "<hr>";
//echo "<hr>";
//echo "<hr>";
//function renderTable_1($n){
//    for ($i = 0; $i < $n; $i++) {
//        $first = $i+1;
//        $second = $n - $i;
//        for ($j = 1; $j <= $n; $j++) {
//            if(($j==$first || $j==$second) ){
//                $arr[$i][$j] = 1 ;
//            } else {
//                $arr[$i][$j] = 0;
//            }
//            echo    ' '.$arr[$i][$j]. ' ';
//        }
//        echo '<br>';
//    }
//
//
//renderTable_1(7);

echo "<hr>";
echo '12.83 а' . '<br>';
/** 12.83. Составить программу:
*а) нахождения минимального значения среди элементов любой строки двумерного массива;
*б) нахождения максимального значения среди элементов любого столбца
*двумерного массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [2, 2, 3],
    [7, 8, 9,1 ,2,5,6],
    [0, 2, 3],
    [1, 2, 3]
];
$row = rand(0, 6);
echo 'номер строки ='. ' '.$row.'<br>';

$min = null;

foreach ($arr as $key => $items) {
    if ($key === $row ) {

        foreach ($items as $key_1 => $item) {
            echo  ' '.$arr[$row][$key_1].' ';
            //echo 'элементы  строки ='. ' '.$arr[$row][$key_1];
            if ($min === null or $item < $min) {
                $min = $item;
            }
        }
    }
}

echo '<br>'.' min ='. ' '.$min;

echo "<hr>";
echo 'номер строки ='. ' '.$row.'<br>';
function minimum($arr, $row)
{$row = rand(0, 6);
    foreach ($arr as $key => $items) {
        if ($key === $row) {
            foreach ($items as $key_1 => $item) {
                echo ' '.$arr[$row][$key_1] . ' ';
                $min = null;
                if ($min === null or $item < $min) {
                    $min = $item;
                }
            }
        }
    }
}

echo  $res = minimum($arr, $row);

echo '<br>'.' min ='. ' '.$min;

echo "<hr>";
echo '12.83 б' . '<br>';
/** 12.83. Составить программу:
 *б) нахождения максимального значения среди элементов любого столбца
 *двумерного массива.
 */
$arr = [
    [1, 2, 3],
    [4, 5, 6],
    [1, 2, 3],
    [2, 2, 3],
    [7, 8, 9],
    [0, 2, 3],
    [1, 2, 3]
];

$column = rand(0, 2);
echo 'номер столбца ='. ' '.$column.'<br>';

$max = null;

foreach ($arr as $key => $items) {
    foreach ($items as $key_1 => $item) {
        if ($key_1 === $column) {
            echo 'элементы  столбца ='. ' '.$arr[$key][$column];
            if ($max === null or  $max < $item ) {
                $max = $item;
            }
        }
    }
}

echo '<br>'.' max ='. ' '.$max;

echo "<hr>";

echo 'номер строки ='. ' '.$column.'<br>';
function maximum($arr, $column)
{
    foreach ($arr as $key => $items) {
        foreach ($items as $key_1 => $item) {
            if ($key_1 === $column) {
                echo ' ' . $arr[$key][$column];
                $max = null;
                if ($max === null or $max < $item) {
                    $max = $item;
                }
            }
        }
    }
}
echo  $res = maximum($arr, $column);

echo '<br>'.' max ='. ' '.$max;


echo "<hr>";
echo '12.84' . '<br>';
/**12.84. Составить программу:
*а) нахождения максимального значения среди элементов любой строки двумерного массива;
*б) нахождения минимального значения среди элементов любого столбца
*двумерного массива.
 */

echo "<hr>";
echo '10.3' . '<br>';
/**  10.3. Определить значение
*z a b a b b max , 2 max 2 ,
*, где
*max , x y — максимальное из чисел х, у. Задачу решить двумя способами:
*1) не используя функцию max;
*2) определив и использовав функцию max.
 */


echo "<hr>";
echo '10.4' . '<br>';
/** 10.4. Определить значение
*z a b a b b min , 3 min 2 , 2
*, где min , x y — минимальное из чисел х, у. Задачу решить двумя способами:
*1) не используя функцию min;
*2) определив и использовав функцию min.
   */


echo "<hr>";
echo '10.5' . '<br>';
/** 10.5. Определить значение
*z x y sign sign, где 1 при 0,
*sign 0 при 0, 1 при 0.
*a a a a
*Значения x и y вводятся с клавиатуры. Задачу решить двумя способами:
*1) не используя функцию sign;
*2) определив и использовав функцию sign.
 */



echo "<hr>";
echo '10.22' . '<br>';
/** 10.22. Даны шесть различных чисел. Определить максимальное из них.
*(Определить функцию, находящую максимум из двух различных чисел.)
 */


echo "<hr>";
echo '10.35' . '<br>';
/**10.35. Составить процедуру, "рисующую" на экране горизонтальную линию
* из любого числа символов "*".
 */


echo "<hr>";
echo '10.37' . '<br>';
/** 10.37. Составить процедуру, "рисующую" на экране прямоугольник из символов "*".
* Задачу решить двумя способами:
*1) не используя процедуру, разработанную в задаче 10.35;
*2) с использованием процедуры, разработанной в задаче 10.35.
 */
function funct ($symbol, $n){
    for ($i = 0; $i < $n; $i++) {
        echo $symbol;
    }
}
function row ($symbol, $n){
    echo $symbol;
    for ($i = 1; $i < ($n-1); $i++) {
        echo ' '. 'nbsp';
    }
    echo $symbol . '<br>';
}
function ramka ($symbol, $w, $h)
{
    funct($symbol, $w);
    for ($i = 0; $i < $h; $i++) {
        row($symbol, $w);
    }
    funct($symbol, $w);

}
ramka (''*'', w60, 40);

echo "<hr>";
echo '10.41' . '<br>';
/** 10.41. Написать рекурсивную функцию для вычисления факториала натурального
*числа n.
 */
function fuctorial ($n){
    if($n == 1) {
        return 1;
    }
    return $n * fuctorial ($n - 1);
        }
echo fuctorial (4);

echo "<hr>";
echo '10.42' . '<br>';
/** 10.42. В некоторых языках программирования (например, в Паскале)
* не предусмотрена операция возведения в степень. Написать рекурсивную функцию
*для расчета степени n вещественного числа a (n — натуральное число).
 */
function stepen ($a, $n){
    if ($n == 0){
        return 1;
    }
    return $a * stepen ($a, $n-1);
}
echo stepen (3, 5);
echo "<hr>";
echo '10.45' . '<br>';
/** /10.45. Даны первый член и разность арифметической прогрессии.
* Написать рекурсивную функцию для нахождения:
*а) n-го члена прогрессии;
*б) суммы n первых членов прогрессии.
 */
